// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"
)

// S3SaverImage is an autogenerated mock type for the S3SaverImage type
type S3SaverImage struct {
	mock.Mock
}

// Save provides a mock function with given fields: file, key
func (_m *S3SaverImage) Save(file multipart.File, key string) error {
	ret := _m.Called(file, key)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(multipart.File, string) error); ok {
		r0 = rf(file, key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewS3SaverImage creates a new instance of S3SaverImage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewS3SaverImage(t interface {
	mock.TestingT
	Cleanup(func())
}) *S3SaverImage {
	mock := &S3SaverImage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
